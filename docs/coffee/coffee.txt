-------SKLEP INTERNETOWY-------

*********************************************************
*               	SŁOWNIK			        *
*********************************************************

*imię 	 	minimum jeden znak
*Nazwisko  	minimum jeden znak
*Email  	<minimum jeden znak> @ <minimum jeden znak>
*Hasło  	minimum 8 znaków w tym wielka litera, mała litera i cyfra


*********************************************************
*                  FUNKCJONALNOŚCI			*
*********************************************************

1. Rejestracja użytkownika. ----DONE
Wymagany email (w bazie danych nie ma konta użytkownika z podanym email’em), imię, nazwisko,  
hasło, powtórzenie hasła (podstrona ‘Sign in/Register’). 

2. Logowanie. ----DONE
Wymagany email i hasło, które odpowiadają 
użytkownikowi zapisanemu w bazie danych (podstrona ‘Sign in/Register’).

3. Wylogowywanie ----DONE

4. Zakup. ----DONE
Wymagane wcześniejsze logowanie, podanie adresu lub wybranie adresu 
z listy adresów użytkownika, płatność (podstrona ‘Cart’).

5. Reklamacja ----DONE
(podstrona ‘My account’, zakładka ‘Orders’) Wymagane logowanie.

6. Filtrowanie oferty ze względu na typ produktu i zakres ceny. ----DONE

7. Zapis/rezygnacja do/z newsletter’a (podstrona  ‘My account’, zakładka ‘Newsletter’). 
Wymagane logowanie.

8. Dodanie/usunięcie adresu do/z listy adresów  ----DONE
(podstrona  ‘My account, zakładka ‘Address book’)’. Wymaganie logowanie.

9. Edycja danych użytkownika ----DONE
tj. imię, nazwisko (podstrona ‘My account’, zakładka ‘Profile’). 
Wymagane logowanie.

10. Koszyk – aktualizacja ----DONE

11. Koszyk – dodawanie przedmiotów ----DONE


*********************************************************
*                   SCENARIUSZE     			*
*********************************************************

Szablon

Aktorzy:
Zakres:
Poziom:
Udziałowcy i ich cele:
Zdarzenie wyzwalające:
Warunki wstępne:
Warunki końcowe dla sukcesu:
Warunki końcowe dla niepowodzenia:

Scenariusz główny:

Scenariusz alternatywny:

=======================

REJSTRACJA --- done

Aktorzy: 				Użytkownik
Zakres: 				Sklep internetowy
Poziom: 				Sytemowowy
Udziałowcy i ich cele: 			Użytkownik chce stworzyć konto. 
					Sklep chce zebrać dane spełniające zadane warunki.
Zdarzenie wyzwalające: 			Użytkownik przechodzi na podstronę ‘Sign in/Register’
Warunki wstępne:			Użytkownik jest wylogowany	
Warunki końcowe dla sukcesu:		Konto użytkownika zostaje utworzone i zapisane w bazie danych. 
					Użytkownik zostaje powiadomiony o sukcesie
Warunki końcowe dla niepowodzenia:	Konto nie zostaje stworzony. 
					Użytkownik zostaje powiadomiony o niepowodzeniu i przyczynach niepowodzenia.

Scenariusz główny:
1. System wyświetla formularz wprowadzania danych rejestracji
2. Użytkownik wprowadza dane (zdefiniowane w słowniku): imię, nazwisko, email, hasło
4. System weryfikuje dane
5. System wyświetla powiadomienie o udanej rejestracji

Scenariusz alternatywny:
4.a. Nie wprowadzono wymaganych danych
4.a.1 System wyświetla ponownie formularz zaznaczając, które dane powinny zostać poprawione i jakie warunki powinny spełniać zaznaczone dane
4.a.2 Następuje powrót do punktu 2 scenariusza głównego

Scenariusz alternatywny:
4.a. W bazie danych znajduję się konto dla podanego email’a
4.a.1 System wyświetla ponownie formularz zaznaczając email i wyświetla informację o istnieniu konta dla podanego email’a
4.a.2 Następuje powrót do punktu 2 scenariusza głównego

=======================

LOGOWANIE --- done

Aktorzy:				Użytkownik
Zakres:					Sklep internetowy
Poziom:					Sytemowowy 
Udziałowcy i ich cele:			Użytkownik chce się zalogować. 
					Sklep chce zebrać dane spełniające zadane warunki.
Zdarzenie wyzwalające:			Użytkownik przechodzi na podstronę ‘Sign in/Register’
Warunki wstępne:			Użytkownik nie jest zalogowany.
Warunki końcowe dla sukcesu:		Użytkownik zostaje zalogowany. 
					Następuje przekierownie na podstronę ’Shop’ 
Warunki końcowe dla niepowodzenia:	Użytkownik nie zostaje zalogowany. 
					Użytkownik zostaje powiadomiony o niepowodzeniu.

Scenariusz główny:
1. System wyświetla formularz wprowadzania danych logowania
2. Użytkownik wprowadza dane: email, hasło
4. System weryfikuje czy w bazie danych istnieje konto, które odpowiada wprowadzonym danym
5. System przekierowuje na podstronę ‘Shop’.
6. System wyświetla ‘My account’ na pasku nawigacji
7. System zamienia opcję przekierowania na postronę ‘Sign in/Register’ na opcję wylogowania użytkownika ‘Sign out’
8. Użytkownik przechodzi na podstronę ‘My account’

Scenariusz alternatywny:
4.a. Nie istnieje konto dla wprowadzonych danych
4.a.1 System wyświetla informację o niepowodzeniu
4.a.2 Następuje powrót do punktu 2 scenariusza głównego

=======================

WYLOGOWANIE --- done

Aktorzy:				Użytkownik
Zakres:					Sklep internetowy
Poziom:					Sytemowowy 
Udziałowcy i ich cele:			Użytkownik chce się wylogować. 
					Sklep chce poprawnie wykonać operację.
Zdarzenie wyzwalające:			Użytkownik przechodzi na podstronę ‘Sign out’
Warunki wstępne:			Użytkownik jest zalogowany
Warunki końcowe dla sukcesu:		Użytkownik zostaje wylogowany. 
					Następuje przekierownie na podstronę ’Shop’ 

Scenariusz główny:
1. Użytkownik wybiera opcję ‘Sign out’
2. System usuwa ‘My account’ z paska nawigacji
3. System zamienia opcję przekierowania na postronę ‘Sign out’ na opcję wylogowania użytkownika ‘Sign in/Register’
4. System przekierowuje na podstonę ‘Shop’

=======================

EDYCJA DANYCH OSOBOWYCH --- table bone

Aktorzy:				Użytkownik	
Zakres:					Sklep internetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik zmienia swoje dane osobowe, oraz adres e-mail.
					Sklep zapisuje nowopodane dane.
Zdarzenie wyzwalające:			Wybranie opcji 'Personal Informations' w podstronie widocznej po zalogowaniu 
					użytkownika.
Warunki wstępne:			Użytkownik jest zalogowany.
Warunki końcowe dla sukcesu:		System zapisuje nowe dane uzytkownika.
Warunki końcowe dla niepowodzenia:	System wysyła komunikat o błędzie i powraca do formularza z danymi osobowymi.

Scenariusz główny:
1. Użytkownik wybiera opcję 'Personal Informations'.
2. System wyświetla na stronie widok formularza.
3. Użytkownik wypełnia formularz.
4. Użytkownik klika 'OK'.
5. System weryfikuje dane.
6. System wysyła komunikat o zapisie danych.

Scenariusz alternatywny:
5.a System odrzuca zmiany.
5.a.1 System wyświetla komunikat o niepoprawności danych.
5.a.2 Następuje powrót do punktu 3. scenariusza głównego.

=======================

FILTROWANIE --- table done

Aktorzy:				Użytkownik	
Zakres:					Sklep internetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik zaznacza opcję o nazwie kategorii, jaką
					powiniem spełniać szukany produkt, w podstronie z wynikami wyszukiwania.
					Sklep redukuje/rozszerza listę o pordukty spełniające warunki.
Zdarzenie wyzwalające:			Zaznaczenie/odznaczenie opcji.
Warunki wstępne:			Brak
Warunki końcowe dla sukcesu:		System wyświetla produkty spełniające określone kryterium.

Scenariusz główny:
1. Klient wyszukuje produkt w wyszukiwarce.
2. System przekierowywuje go do podstrony z listą rezultatów.
3. Klient zaznacza opcję przy dostępnych kategoriach.
4. System odświeża listę zostawiając tylko te produkty, które spełniają kryteria.

Scenariusz alternatywny:
3.a Klienit odznacza opcję.
3.a.1 System odświeża listę, rozszerzając listę o produkty, które spełniają kryteria.

4.a System wyświetla informację, że nie ma produktów spełniających podane kryteria.

=======================

DODAWANIE PRODUKTÓW DO KOSZYKA (Z POZIOMU PODSTRONY PRODUKTU) --- done

Aktorzy:				Użytkownik	
Zakres:					Sklep internetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik chce dodawać produkty do koszyka. 
					Sklep chce zebrać i zapisać informacje o zawartości koszyka.
Zdarzenie wyzwalające:			Użytkownik przechodzi na podstronę produktu
Warunki wstępne:			Brak
Warunki końcowe dla sukcesu:		dodanie produktów do koszyka
Warunki końcowe dla niepowodzenia:	Informacja o niepowodzeniu

Scenariusz główny:
1. System wyświetla podstronę produktu
2. Użytkownik wprowadza ilość produktów (domyślna wartość=1)
4. System weryfikuje dane (ilość>0, 0-ignoruj)
5. Użytkownik wybiera opcję ‘Add to Cart’
6. System zmienia stan koszyka

Scenariusz alternatywny:
4.a. Ilość nie jest liczbą naturalną
4.a.1 System wyświetla ponownie formularz zaznaczając, które dane powinny zostać poprawione
4.a.2 Następuje powrót do punktu 2 scenariusza głównego


=======================

ZMIANA ZAWARTOŚCI KOSZYKA (Z POZIOMU KOSZYKA) --- table done

Aktorzy:				Użytkownik	
Zakres:					Sklep internetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik chce zmienić zawartość koszyka. 
					Sklep chce zaktualizować informacje o zawartości koszyka.
Zdarzenie wyzwalające:			Użytkownik przechodzi na podstronę koszyka.
Warunki wstępne:			Brak
Warunki końcowe dla sukcesu:		aktualizacja stanu koszyka
Warunki końcowe dla niepowodzenia:	Informacja o niepowodzeniu

Scenariusz główny:
1. System wyświetla podstronę koszyka
3. Użytkownik zmienia ilość produktów
4. System weryfikuje dane
5. System aktualizuje stan koszyka

Scenariusz alternatywny:
4.a.Ilość nie jest liczbą naturalną
4.a.1 System wyświetla ponownie formularz zaznaczając, które dane powinny zostać poprawione
4.a.2 Następuje powrót do punktu 2 scenariusza głównego

=======================

ZAKUP --- table done

Aktorzy:				Użytkownik
Zakres:					Sklep internetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik dokonuje zakupu towarów.
					Sklep przekierowuje go do procedury płatności.
Zdarzenie wyzwalające:			Użytkownik klika 'Buy' na podstronie koszyka.
Warunki wstępne:			Użytkownik jest zalogowany
Warunki końcowe dla sukcesu:		Nastąpi przekierowanie do procedury płatności.
Warunki końcowe dla niepowodzenia:	Użytkownik zostanie powiadomiony o niepowodzeniu.

Scenariusz główny:
1. Użytkownik przechodzi na podstronę Koszyka.
2. Użytkownik klika 'Buy'.
3. System sprawdza, czy użytkownik jest zalogowany.
4. System przekierowywuje użytkownika na stronę 'Checkout Details'.
5. Użytkownik wykonuje jeden ze scenariuszy odnoszących się do scenariusza CHECKOUT DETAILS (WYSYŁKA).
6. System przekazuje dane z koszyka do systemu płatniczego, i przekierowywuje na formularz wymagający uwierzytelnienia.

Scenariusz alternatywny:

6.a Użytkownik nie jest zalogowany.
6.a.1 System przekierowywuje użytkownika do postrony z logowaniem.
6.a.2 Użytkownik realizuje jeden ze scenariuszy ze scenariusza LOGOWANIE.
6.a.3 Następuje powrót do punktu 1. scenariusza głównego.

=======================

CHECKOUT DETAILS (WYSYŁKA) --- table done

Aktorzy:				Użytkownik
Zakres:					Sklep interneetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik określa adres wysyłki.
					System pobiera określony przez użytkownika adres 
					jako dane do wysyłki.
Zdarzenie wyzwalające:			Użytkownik klika 'Next' na podstronie z danymi adresowymi. 
Warunki wstępne:			Użytkownik jest zalogowany.
Warunki końcowe dla sukcesu:		Podany przez użytkownika adres zostanie podany jako
					informacja dla sklepu.
Warunki końcowe dla niepowodzenia:	Nastąpi przekierowanie do podstrony z wyborem adresu wysyłki.

Scenariusz główny:
1. System przekierowywuje zalogowanego użytkownika na podstronę z wyborem adresu.
2. Użytkownik klika na przycisk rozwijający listę zapisanych adresów.
3. System wyświetla tę listę, zaznaczając w widoczny sposób adres domyślny.
4. Użytkownik klika na jeden z innych adresów na liście.
5. System zaznacza w widoczny sposób wybrany adres, ale nie ustawia go jako domyślny.
6. Użytkownik klika 'Next'
7. System przekazuje zaznaczony adres jako dane do wysyłki.

Scenariusz alternatywny:

2.a Użytkownik klika 'Next'.
2.a.1 Następuje przekierownie do punktu 7. scenariusza głównego.

2.b Użytkownik klika 'Add new address'.
2.b.1 System rozwija widok z formularzem do danych adresowych.
2.b.2 Użytkownik wypełnia pola formularza.
2.b.3 Użytkownik klika 'Save'.
2.b.4 System sprawdza poprawność danych.
2.b.5 System odznacza adres domyślny z listy, a zaznacza ten podany w formularzu.
2.b.6 Następuje powrót do punktu 6. scenariusza głównego.

2.b.3.a Użytkownik klika 'Add to my Address Book'.
2.b.3.a.1 System otrzymuje informację o tym, by w punkcie 2.b.3 scenariusza alternatywnego
	  dodać podany adres do bazy danych jako adres klienta.
2.b.3.a.2 Nastepuje powrót do punktu 2.b.3

2.b.4.a System odrzuca dane.
2.b.4.a.1 Następuje powrót do punktu 2.b.2 scenariusza alternatywnego.

=======================

CHECKOUT DETAILS (USTAWIENIA) ---table done

Aktorzy:				Użytkownik
Zakres:					Sklep internetowy
Poziom:					Systemowy
Udziałowcy i ich cele:			Użytkownik dodaje/edytuje/usuwa adres wysyłki do swojej listy adresów.
					System modyfikuje listę adresów według polecenia użytkownika.
Zdarzenie wyzwalające:			Użytkownik klika 'My Addresses' na podstronie widoczej bezpośrednio
					po zalogowaniu. 
Warunki wstępne:			Użytkownik jest zalogowany.
Warunki końcowe dla sukcesu:		System wykona żądaną operację.
Warunki końcowe dla niepowodzenia:	Nastąpi powrót do widoku z listą adresów, i nie zajdą żadne zmiany.

Scenariusz główny:
1. Użytkownik klika 'My Addresses'.
2. System przekierowywuje go na podstronę z wyborem adresu.
3. Użytkownik klika na przycisk rozwijający listę zapisanych adresów.
4. System wyświetla tę listę, zaznaczając w widoczny sposób adres domyślny.
5. Użytkownik najeżdża na element listy.
6. System wyświetla przy elemencie przyciski 'Edit' i 'Delete'.
7. Użytkownik klika 'Edit'.
8. System rozwija widok z formularzem do danych adresowych.
9. System wypełnia pola wartościami tworzącymi adres.
10. Użytkownik edytuje pola fornularza.
11. Użytkownik klika 'Save'.
12. System weryfikuje poprawność danych.
13. System zapisuje zmiany.

Scenariusz alternatywny:

3.a Użytkownik klika 'Add new Address'.
3.a.1 System rozwija widok z formularzem do danych adresowych.
3.a.2 Następuje powrót do punktu 10. scenariusza głównego.

6.a Użytkownik klika 'Delete'.
6.a.1 System wyświetla widok z komunikatem ostrzegawczym, oraz przycisakmi 'Yes', 'No'.
6.a.2 Użytkownik klika 'Yes'.
6.a.3 System usuwa element z listy.

6.a.2.a Użytkownik klika 'No'.
6.a.2.a.1 System ukrywa widok z komunikatem ostrzegawczym.

=======================

REKLAMACJA --- table done

Aktorzy:				Użytkownik
Zakres:					Sklep internetowy
Poziom:					Sytemowowy
Udziałowcy i ich cele:			Użytkownik chce dokonać reklamacji. 
					Sklep chce zebrać dane spełniające zadane warunki.
Zdarzenie wyzwalające:			Użytkownik przechodzi na podstronę ‘My account’
Warunki wstępne:			Użytkownik jest zalogowany
Warunki końcowe dla sukcesu:		Reklamacja zostaje zapisana w bazie danych. 
					Użytkownik zostaje powiadomiony o sukcesie
Warunki końcowe dla niepowodzenia:	Użytkownik zostaje powiadomiony o niepowodzeniu i przyczynach niepowodzenia.

Scenariusz główny:
1. Użytkownik przechodzi na zakładkę ‘Orders’
2. Użytkownik wybiera opcję ‘Complain’
3. System otwiera podstronę ‘Complain’
4. Użytkownik wprowadza dane w polu ‘Letter of complain’
5. System weryfikuje dane (czy wprowadzono minimum 10 znaków)
6. System wyświetla powiadomienie o udanej reklamacji

Scenariusz alternatywny:
5.a. Nie wprowadzono wymaganych danych
5.a.1 System wyświetla ponownie formularz zaznaczając ile znaków należy wprowadzić
5.a.2 Następuje powrót do punktu 4 scenariusza głównego


=======================

NEWSLETTER --- table done

Aktorzy:				Użytkownik
Zakres:					Sklep internetowy
Poziom:					Sytemowowy
Udziałowcy i ich cele:			Użytkownik chce zapisać się/wypisać z newsletter’a. 
					Sklep chce zebrać informacje o zapisie do newsletter’a	
Zdarzenie wyzwalające:			Użytkownik przechodzi na podstronę ‘My account’
Warunki wstępne:			Użytkownik jest zalogowany
Warunki końcowe dla sukcesu:		Deklaracja dotycząca newsletter’ zostaje zapisana w bazie danych

Scenariusz główny:
1.Użytkownik przechodzi na zakładkę ‘Newsletter’
2.Użytkownik wybiera opcję zapisu do newsletter’a / rezygnacji z newsletter’a
3.System aktualizuje informacje na stronie i w bazie danych


*********************************************************
*               SCENARIUSZE DO TESTÓW			*
*********************************************************

LOGIN
1.	Click ‘Sign in/Register’
2.	Redirect to ‘Sign in/Register’ page
3.	Enter invalid data in ‘Sign in’ form
4.	Click ‘Sign in’
5.	See failure message
6.	Enter valid datain ‘Sign in’ form
7.	Click ‘Sign in’
8.	Redirect to ‘Shop’ page
9.	‘My account’ is displayed
10.	‘Sign out’ appear instead of ‘Sign in/Register’
11.	Click ‘Sign out’
12.	‘My account’ disapear
13.	 ‘Sign in/Register’ appear instead of ‘Sign out’

LOGIN 2
1.	Click ‘Sign in/Register’
2.	Redirect to ‘Sign in/Register’ page
3.	Enter valid data in ‘Sign in’ form
4.	Click ‘Sign in’
5.	Redirect to ‘Shop’ page
6.	‘My account’ is displayed
7.	‘Sign out’ appear instead of ‘Sign in/Register’
8.	Click ‘My account’
9.	Click ‘Sign out’
10.	Redirect to ‘Shop’ page
11.	‘My account’ disapear
12.	‘Sign in/Register’ appear instead of ‘Sign out’

REGISTER
1.	Click ‘Sign in/Register’
2.	Redirect to ‘Sign in/Register’ page
3.	Enter nothing in ‘Register’ form
4.	Click ‘Register’
5.	See error messages
6.	Enter valid data but taken email in ‘Register’ form
7.	See email taken error
8.	Enter available email
9.	Click ‘Register’
10.	See successful message


*********************************************************
*               	BAZA DANYCH			*
*********************************************************

Tabela „Products”

- 	productId: integer (PK)
- 	name: string 
- 	price: integer 
- 	imagePath: string
- 	type: string
- 	description: string

Tabela “Clients”

-	clientId: integer (PK)
-	email: string 
-	firstName: string
-	lastName: string
-	password: string
-	newsletter: boolean

Tabela “Orders”
-	orderId: integer (PK)
-	clientId: integer (FK)
-	workerId: integer (FK)
-	addressed: integer (FK)
-	status: integer 
-	opendate: date
-	closedate: date


Tabela “Order Entries”

-	orderId: integer (FK)
-	productId: integer (FK)
-	amount: integer

Tabela “Addresses”
-	addressId: integer (PK)
-	clientId: integer (FK)
-	country: string
-	city: string
-	street: string
-	ZIPCode: integer
-	buildingNumber: integer
-	apartmentNumber: integer

Tabela “Payments”
-	paymentId: integer (PK)
-	orderId: integer (FK)
-	amount: integer 
-	date: date

Tabela “Complaints”
-	orderId: integer (FK)
-	workerId: integer (FK)
-	description: string
-	date: date
-	isClosed: boolean 

Tabela “Workers”
-	workerId: integer (PK)
-	role: enum 
-	email: string
-	password: string


*********************************************************
*              	   REQUESTY DO BAZY			*
*********************************************************

GetClientCredentials : pobierz imię, nazwisko, adresy 
(flaga przy adresie domyślnym tzn. tym który został użyty przy ostatnim zamówieniu 
i jednocześnie jest zapisany w książce adresów) zalogowanego klienta

GetOrders : pobierz wszystkie zamówienia zalogowanego klienta 

IsEmailAvailable  : sprawdzenie czy dany email jest zapisany w bazie danych

CreateNewClient  : dodaj klienta do bazy danych

IsSingInCredentialCorrect : sprawdzenie czy w bazie danych 
jest zapisany klient o podanym email’u i haśle 

IsClientSignInForNewsletter : sprawdzenie czy zalogowany 
klient powinien otrzymywać newsletter

UpdateClientCredentials : zaktualizuj dane zalogowanego klienta

AddNewAddress : stwórz nowy adres i przypisz do zalogowanego klienta

RemoveAddress : usuń wybrany adres

SaveOrder : zapisz zamówienie 

CreateComplain : stwórz reklamacje



